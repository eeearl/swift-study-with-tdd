## Disadvantages of TDD (TDD의 단점)

  TDD도 단점을 가지고 있다. 주요 단점들을 나열해 본다.

  * 은색 총알이 없다. (No Silver Bullet, 모든 문제에 해결책은 아니다 라는 의미)
    - 테스트는 버그를 찾는을 돕는다. 그러나, 그것들은 테스트 코드를 설명하거나 코드를 구현할 때 버그를 찾을 순 없다. 만약 문제를 해결해야 하는것에 대해서 이해가 되지 않는다면 테스트를 작성하는 것은 대부분 도움이 되지 못한다.
  
  * 시작이 엄청 느리게 느껴진다.
    - 만약 TDD 시작하게 된다면, 당신은 간단한 구현들이 굉장히 오래 걸린다고 느껴질 것이다. 그리고 인터페이스를 위한 생각이 필요할것이다. 당신은 최종적으로 작성한 코드를 시작하기 전에 테스트 코드를 작성하고, 테스트를 실행해야 한다. 
  
  * 팀의 모든 멤버에게 테스트를 요구하게된다.
    - TDD는 코드의 디자인에 영향을 준다. 이것은 TDD를 사용하는 모든 팀에게 요구된다. 혹은 아무도 하지 않는다. 이것을 하게 되면 가끔 TDD가 옳다고 하는것이 관라하기 어려워진다. 왜냐하면 그들은 자주 새로운 기능을 구현할때 코드를 작성하는 시간을 끝내기가 굉장히 시간이 오래걸린다고 느껴지기 때문이다. 이것을 도우려면 유닛 테스트의 중요성을 모든 팀원들이 동의를 해야 할 것이다.
  
  * 요구사항이 변경될때 모든 테스트를 유지보수 해야한다.
    - 아마도, TDD에 대한 강력한 주장은 테스트들이 코드 같은 것들로 유지되야 해야만 한다. 어떤 요구사항이 변하든 간에, 당신의 코드와 테스트가 변경이 필요하다. 그러나 당신이 TDD로 작업을 하고 있다면, 당신은 첫번째 테스트들과 통과한 테스트들을 변경할 필요가 있다. 그래서 현실적으론 이 점은 오랜시간 코드를 작성할 때의 시점으로 돌아가는 것과 마찬가지인것이 되어 버린다.